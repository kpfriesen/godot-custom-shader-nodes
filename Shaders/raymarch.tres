[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://cidio1kjyfm0n"]

[ext_resource type="Script" path="res://Addons/ShaderNodes/raymarch.gd" id="1_q1eqt"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_i5mo3"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_c48ov"]
constant = 0.1

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_d0h2b"]
default_input_values = [2, 0.08, 4, 12.0]
initialized = true
script = ExtResource("1_q1eqt")

[sub_resource type="VisualShaderNodeTexture3DParameter" id="VisualShaderNodeTexture3DParameter_nm4c7"]
parameter_name = "march_texture"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1faf1"]
input_name = "camera_position_world"

[sub_resource type="VisualShaderNodeIntConstant" id="VisualShaderNodeIntConstant_hhwbe"]
constant = 1024

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_t6ub7"]
default_input_values = [0, 0.0, 1, 12.0]
operator = 3

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wwxlt"]
default_input_values = [0, 1.0, 1, 0.0]
operator = 1

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_b4u0j"]
constant = Color(0, 0, 0, 1)

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler3D march_texture;


// Raymarch

struct ray {
    vec3 dir;
    float val;
    vec3 pos;
    float dist;
};

ray raymarch( ray r, int steps, float max_dist, float step_size, float threshold, sampler3D volume) {
    for(int i = 0; i < steps; ++i) {
        r.val = texture(volume, r.pos).x;
        r.dist += step_size;
        r.pos += r.dir * step_size;
        if(r.val >= threshold) {
            break;
        }
        if(r.dist >= max_dist) {
            break;
        }
    }
    return r;
}
    

void fragment() {
// ColorConstant:9
	vec4 n_out9p0 = vec4(0.000000, 0.000000, 0.000000, 1.000000);


// Input:4
	vec3 n_out4p0 = CAMERA_POSITION_WORLD;


// FloatConstant:11
	float n_out11p0 = 0.100000;


// VectorOp:10
	vec3 n_out10p0 = n_out4p0 * vec3(n_out11p0);


// IntConstant:5
	int n_out5p0 = 1024;


	float n_out2p0;
	float n_out2p1;
	vec3 n_out2p2;
// Raymarch:2
	float n_in2p2 = 0.08000;
	float n_in2p4 = 12.00000;
	{
		
		ray r;
		    r.dir = vec3((INV_VIEW_MATRIX * vec4(-VIEW, 1.0)).xyz);
		    r.pos = n_out10p0;
		    r.val = 0.0;
		    r.dist = 0.0;
		     r = raymarch(r, n_out5p0, n_in2p4, n_in2p2, 0.5, march_texture);
		    n_out2p0 = r.dist;
		    n_out2p1 = r.val;
		    n_out2p2 = r.pos;
	}


// FloatOp:6
	float n_in6p1 = 12.00000;
	float n_out6p0 = n_out2p0 / n_in6p1;


// FloatOp:8
	float n_in8p0 = 1.00000;
	float n_out8p0 = n_in8p0 - n_out6p0;


// Output:0
	ALBEDO = vec3(n_out9p0.xyz);
	EMISSION = vec3(n_out8p0);


}
"
graph_offset = Vector2(216, -173)
nodes/fragment/0/position = Vector2(1280, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeCustom_d0h2b")
nodes/fragment/2/position = Vector2(80, 160)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture3DParameter_nm4c7")
nodes/fragment/3/position = Vector2(-360, -120)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_1faf1")
nodes/fragment/4/position = Vector2(-700, 240)
nodes/fragment/5/node = SubResource("VisualShaderNodeIntConstant_hhwbe")
nodes/fragment/5/position = Vector2(-260, 420)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_t6ub7")
nodes/fragment/6/position = Vector2(420, 140)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_wwxlt")
nodes/fragment/8/position = Vector2(420, 300)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorConstant_b4u0j")
nodes/fragment/9/position = Vector2(420, 40)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_i5mo3")
nodes/fragment/10/position = Vector2(-280, 200)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatConstant_c48ov")
nodes/fragment/11/position = Vector2(-503, 370)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 0, 5, 0, 2, 3, 6, 0, 8, 1, 2, 0, 6, 0, 9, 0, 0, 0, 4, 0, 10, 0, 11, 0, 10, 1, 10, 0, 2, 1, 8, 0, 0, 5)
